namespace ca.mcgill.ecse321.group10.TAMAS;

class Course {
  className;
  immutable cdn;
  Float graderTimeBudget; // time budget
  Float taTimeBudget;      // time budget
  * <@>- 0..* Tutorial tutorials;
  * <@>- 0..* Laboratory laboratories;
}

class Tutorial {
  Date startTime;
  Date endTime;
}

class Laboratory {
  Date startTime;
  Date endTime;
}

class Instructor {
  isA Profile;
  * -> * Course courses;
  * -- * Application applications;
}

class Student {
  isA Profile;
  experience;
  degree { // enum, wont show in diagram, shows in code
    UNDERGRAD{}
    GRADUATE{}
  }
  * -- * Job jobs;
}

class Profile {
  immutable id; // either student or employee ID, for the securities yo
  username;
  password;
  firstName;
  lastName;
}

class Job {
  autounique id;
  position {  // enum, wont show in diagram, shows in code
    TA {}
    GRADER {}
  }
  immutable double salary; // cuz the pay is so big we need a double
  immutable requirements;
  immutable Date requiredTime;
  * -<@> * Course course;
}

class Application {
  autounique id;
  Integer postingID;
  *-<@> * Student student;
}

// unsure if class should create instances of Intrsuctor/Student
// or rather have all the methods of Instructor/Student
class Admin{
  isA Profile;
  * -> * Instructor intructors;
  * -> * Student students;
  * <@>- 1 JobManager jobManagers;
}

// mimic the registrationManager,
// oversee all job posting/application transactions
class JobManager {
  singleton;
  1 <@>- * Job jobs;
}

class ProfileManager {
  singleton;
  1 <@>- * Profile userProfiles;
}